<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="com.example.demo.EmployeeConsumerApplication"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="com.exmaple.domain.Employee"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.DiscoveryClient"/>
<fullyQualifiedTypeName name="com.netflix.discovery.DiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalancerClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
<fullyQualifiedTypeName name="com.netflix.ribbon.proxy.annotation.Hystrix"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="com.example.demo.FeignInterface"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
<fullyQualifiedTypeName name="com.netflix.discovery.converters.Auto"/>
<fullyQualifiedTypeName name="com.uzio.wcn.ResourceNotFoundException"/>
<fullyQualifiedTypeName name="ch.qos.logback.core.joran.conditional.ElseAction"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.filters.support.FilterConstants"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.EnableConfigurationProperties"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="com.uzio.wcn.EmployeeService"/>
<fullyQualifiedTypeName name="java.util.logging.Logger"/>
<fullyQualifiedTypeName name="java.util.logging.Level"/>
<fullyQualifiedTypeName name="com.uzio.wcn.ConsumerController"/>
</qualifiedTypeNameHistroy>
